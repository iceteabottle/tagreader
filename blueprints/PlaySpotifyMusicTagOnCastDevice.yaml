blueprint:
  name: Play and Pause Spotify Music Tag on a cast device
  description: Play Spotify music tag with Spotify uri on a cast device and pause playback when the NFC tag is removed
  domain: automation
  input:
    reader_id:
      name: ESPHome NFC reader device
      description: This is your NFC reader
      selector:
        device:
          integration: esphome
    player:
      name: Media Player
      description: This is your cast media player for this reader
      selector:
        entity:
          domain: media_player
          integration: cast
    shuffle:
      name: Shuffle
      description: Enable shuffle mode
      default: true
      selector:
        boolean: {}
    max_volume:
      name: Maximum Volume
      description: Set the maximum volume level
      default: 1.0
      selector:
        number:
          min: 0.0
          max: 1.0
          step: 0.01
    volume_step:
      name: Volume Step
      description: Set the volume step
      default: 0.05
      selector:
        number:
          min: 0.0
          max: 1.0
          step: 0.01

variables:
  device_id: !input reader_id
  player: !input player
  volume_step: !input volume_step
  max_volume: !input max_volume

trigger:
  - platform: event
    event_type: esphome.music_tag
  - platform: event
    event_type: esphome.tag_removed
  - platform: event
    event_type: esphome.music_tag_play_pause
  - platform: event
    event_type: esphome.music_tag_prev_song
  - platform: event
    event_type: esphome.music_tag_next_song
  - platform: event
    event_type: esphome.music_tag_decrease_volume
  - platform: event
    event_type: esphome.music_tag_increase_volume

condition:
  - condition: template
    value_template: "{{ trigger.event.data.device_id == device_id }}"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.event_type == "esphome.music_tag" }}'
          - condition: template
            value_template: '{{ trigger.event.data.source == "spotify" }}'
        sequence:
          - action: spotcast.start
            data:
              entity_id: !input player
              uri: "{{ trigger.event.data.url }}"
              random_song: !input shuffle
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.event_type == "esphome.tag_removed" }}'
        sequence:
          - action: media_player.media_pause
            target:
              entity_id: !input player
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.event_type == "esphome.music_tag_play_pause" }}'
        sequence:
          - action: media_player.media_play_pause
            target:
              entity_id: !input player
      - conditions:
        - condition: template
          value_template: '{{ trigger.event.event_type == "esphome.music_tag_prev_song" }}'
        sequence:
          - action: media_player.media_previous_track
            target:
              entity_id: !input player
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.event_type == "esphome.music_tag_next_song" }}'
        sequence:
          - action: media_player.media_next_track
            target:
              entity_id: !input player
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.event_type == "esphome.music_tag_increase_volume" }}'
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >
                {% set new_volume = (state_attr(player, 'volume_level') | default(0)) + volume_step %}
                {{ [new_volume, max_volume] | min }}
            target:
              entity_id: !input player
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.event_type == "esphome.music_tag_decrease_volume" }}'
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >
                {% set new_volume = (state_attr(player, 'volume_level') | default(0)) - volume_step %}
                {{ [new_volume, 0.0] | max }}
            target:
              entity_id: !input player

mode: queued
max: 10
